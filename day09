Day-9 

Q1: Two Sum
//approach->check every pair of numbers in array and if sum matches the target return ans

Code:
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector <int> ans;
        int n=nums.size();
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                if(nums[i]+nums[j]==target && i<j){
                    ans.push_back(i);
                    ans.push_back(j);
                    break;
                }
            }
        }
        return ans;
    }
};

T.C.: O(N^2)
S.C.: O(1)

Q3: Maximum sum from subarray
//iterate over the whole array to find the largest consecutive numbers thus maximising the sum

class Solution {
  public:
    int pairWithMaxSum(vector<int> &arr) {
      int n = arr.size();
        if (n < 2) return -1; 

        int maxsum = 0;
        for (int i = 0; i < n - 1; i++) {
            maxsum = max(maxsum, arr[i] + arr[i + 1]);
        }
        return maxsum;
    }
};
T.C(N)
S.C(1)

